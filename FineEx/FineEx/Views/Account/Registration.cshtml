@model FineEx.Dummy.User

@{
    ViewBag.Title = "Registration";
    SelectList companies = ViewBag.Companies as SelectList;
}

<link href="~/Content/custom/form.css" rel="stylesheet" />

@using (Html.BeginForm("Registration", "Account", FormMethod.Post))
{
    <h2>Registration</h2>
    @Html.AntiForgeryToken()

    <div class="col">
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "label-txt" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            <div class="line-box">
                <div class="line"></div>
            </div>
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col">
        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "label-txt" })
            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            <div class="line-box">
                <div class="line"></div>
            </div>
            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col">
        <div class="form-group">
            @Html.LabelFor(model => model.IdCardNumber, htmlAttributes: new { @class = "label-txt" })
            @Html.EditorFor(model => model.IdCardNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            <div class="line-box">
                <div class="line"></div>
            </div>
            @Html.ValidationMessageFor(model => model.IdCardNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col">
        <div class="form-group">
            @Html.LabelFor(model => model.IdNumber, htmlAttributes: new { @class = "label-txt" })
            @Html.EditorFor(model => model.IdNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            <div class="line-box">
                <div class="line"></div>
            </div>
            @Html.ValidationMessageFor(model => model.IdNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col">
        <div class="form-group">
            @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Company.IdCompany, companies, new { @class = "form-control h-100 mw-100" })
            @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group px-3">
        <div class="col-md-6">
            @Html.LabelFor(model => model.LoginCredentials.Username, htmlAttributes: new { @class = "label-txt" })
            @Html.EditorFor(model => model.LoginCredentials.Username, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            <div class="line-box">
                <div class="line"></div>
            </div>
            @Html.ValidationMessageFor(model => model.LoginCredentials.Username, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            @Html.LabelFor(model => model.LoginCredentials.Password, htmlAttributes: new { @class = "label-txt" })
            @Html.EditorFor(model => model.LoginCredentials.Password, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", type = "password" } })
            <div class="line-box">
                <div class="line"></div>
            </div>
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <input type="submit" value="Register" class="btn btn-outline-warning" />
}

@section Scripts {
    <script src="~/Scripts/form.js"></script>

    @Scripts.Render("~/bundles/jqueryval")
}
