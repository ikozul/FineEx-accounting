@model FineEx.BusinessLayer.Models.InvoiceModels.InvoiceCreateModel

@{
    ViewBag.Title = FineEx.Resources.Invoice.Invoice.CreateTitle;
    SelectList items = ViewBag.Items as SelectList;
}

<br />
<h3 class="p-2 bg-dark text-light">@FineEx.Resources.Invoice.Invoice.CreateTitle #2</h3>
<hr />

@using (Html.BeginForm("CreatePart2", "Invoice", FormMethod.Post, new { id = "invoice-form" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.SenderID)
    @Html.HiddenFor(model => model.Sender)
    @Html.HiddenFor(model => model.PaymentMethodID)
    @Html.HiddenFor(model => model.ReceiverID)
    @Html.HiddenFor(model => model.DueDays)
    @Html.HiddenFor(model => model.UniqueIdentifierOfInvoice)
    @Html.HiddenFor(model => model.VatNumber)
    @Html.HiddenFor(model => model.VatSwiftBankClient)
    @Html.HiddenFor(model => model.InvoiceNumber)
    @Html.HiddenFor(model => model.IssuerID)
    @Html.HiddenFor(model => model.Issuer)
    @for (int i = 0; i < Model.Items.Count; i++)
    {
        @Html.HiddenFor(model => model.Items[i].Id)
        @Html.HiddenFor(model => model.Items[i].ItemName)
        @Html.HiddenFor(model => model.Items[i].ItemPrice)
        @Html.HiddenFor(model => model.Items[i].WarehouseQuantity)
    }
    <div class="row">
        <div class="col-12 col-md-4">
            <div class="form-group">
                @Html.Label(FineEx.Resources.Invoice.Invoice.VatPercentage, htmlAttributes: new { @class = "control-label col-md-2 text-nowrap" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VatPercentage, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", id = "vat-percent" } })
                    @Html.ValidationMessageFor(model => model.VatPercentage, "", new { @class = "text-danger font-weight-bold" })
                </div>
            </div>
        </div>

        <div class="col-12 col-md-4">
            <div class="form-group">
                @Html.Label(FineEx.Resources.Invoice.Invoice.PriceWithoutVat, htmlAttributes: new { @class = "control-label font-weight-bold col-md-2 text-nowrap" })
                <div class="col-md-10">
                    @Html.TextBox("PriceWithoutVat", Model.PriceWithoutVat, new { @class = "form-control font-weight-bold", @readonly = "readonly" })
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-offset-2 my-3 col-6 col-sm-4 col-md-3 col-lg-2">
        <button id="add-item" class="btn btn-success w-100">@FineEx.Resources.Item.Item.AddItem</button>
    </div>

    <div id="items" class="bg-light p-2">
        <table id="items-table" class="table table-light table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>@FineEx.Resources.Item.Item.ItemID</th>
                    <th>@FineEx.Resources.Item.Item.Name</th>
                    <th>@FineEx.Resources.Item.Item.Quantity</th>
                    <th>@FineEx.Resources.Item.Item.Price</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 mt-3 col-6 col-sm-4 col-md-3 col-lg-2">
            <input id="btn-create" type="submit" value="@FineEx.Resources.Invoice.Invoice.Create" class="btn btn-warning font-weight-bold w-100" disabled />
        </div>
    </div>
</div>
}

<div id="item-modal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@FineEx.Resources.Item.Item.NewItem</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="item-form">
                    <table id="item" class="table table-light table-striped table-bordered">
                        <thead class="thead-dark">
                            <tr>
                                <th>@FineEx.Resources.Item.Item.Name</th>
                                <th>@FineEx.Resources.Item.Item.Quantity</th>
                                <th>@FineEx.Resources.Item.Item.Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    @Html.DropDownList("SelectedItemID", new SelectList(Model.Items, "Id", "ItemName"), FineEx.Resources.Invoice.Invoice.ItemPlaceholder, new { @class = "picker form-control col-lg-12" })
                                    @Html.ValidationMessage("SelectedItemID", "", new { @class = "text-danger font-weight-bold" })
                                </td>
                                <td>
                                    @Html.Editor("SelectedQuantity", new { htmlAttributes = new { @class = "form-control", id = "quantity", type = "number", min = "1", @readonly = "readonly" } })
                                    @Html.ValidationMessage("SelectedQuantity", "", new { @class = "text-danger font-weight-bold" })
                                </td>
                                <td>
                                    @Html.Editor("SelectedPrice", null, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", id = "price" } })
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </form>
            </div>
            <div class="modal-footer">
                <button id="btn-close" type="button" class="btn btn-secondary" data-dismiss="modal">@FineEx.Resources.Common.Close</button>
                <button id="btn-add" type="button" class="btn btn-success" data-dismiss="modal" disabled>@FineEx.Resources.Item.Item.AddItem</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        var itemsArray = [];
        $(document).ready(function () {
            $("#PriceWithoutVat").val("");
            $("#vat-percent").val("");
        });

        $("#add-item").on("click", function (e) {
            e.preventDefault();
            $("#quantity").val("");
            $("#price").val("");
            $("#item-modal").modal("show");
        });

        $("#item-modal").on("hidden.bs.modal", function () {
            $(".picker").val("");
            $("#quantity").val("");
            $("#quantity").prop("readonly", true);
            $("#price").val("");
            $("#btn-add").prop("disabled", true);
        });

        var model = @Html.Raw(Json.Encode(Model));
        var selectedItemPrice;
        $(".picker").on("change", function () {
            $("#quantity").val(1);
            var itemId = $(".picker").val();
            if (itemId == 0) {
                $("#quantity").val("");
                $("#quantity").prop("readonly", true);
                $("#price").val("");
                $("#btn-add").prop("disabled", true);
            } else {
                $("#quantity").prop("readonly", false);
                $("#btn-add").prop("disabled", false);
                var maxQuantity = model.Items.filter(function (item) {
                   return item.Id == itemId;
                });
                $("#quantity").attr("max", maxQuantity[0].WarehouseQuantity);
                $("#price").val(maxQuantity[0].ItemPrice);
                selectedItemPrice = maxQuantity[0].ItemPrice;
            }
        });

        $('#quantity').on('input', function () {
            var quantity = parseInt($('#quantity').val());
            var newPrice = quantity * selectedItemPrice;
            $("#price").val(newPrice.toFixed(2));
        });

        $("#btn-add").on("click", function () {
            var selectedItemName = $(".picker option:selected").text();
            var item = $("#item-form").serializeArray();
            item.push({ name: "SelectedItemName", value: selectedItemName });
            itemsArray.push(item);
            makeRowChanges()
        });        

        var priceWithoutVat;
        function makeRowChanges() {
            $('#items-table > tbody').html("");
            $("#PriceWithoutVat").val(0);
            for (var i = 0; i < itemsArray.length; i++) {
                $('#items-table > tbody').append('<tr><td>' + itemsArray[i][0].value + '</td><td>' + itemsArray[i][3].value + '</td><td>' + itemsArray[i][1].value + '</td><td>' + itemsArray[i][2].value + '</td><td><button class="remove-item btn btn-outline-danger fa fa-trash" type="button" value="' + itemsArray[i][0].value + '"></button></td></tr>');
                priceWithoutVat = parseFloat($("#PriceWithoutVat").val()) + parseFloat(itemsArray[i][2].value);
                $("#PriceWithoutVat").val(priceWithoutVat.toFixed(2));
            }
            if (itemsArray.length == 0) {
                $("#btn-create").prop("disabled", true);
            } else {
                $("#btn-create").prop("disabled", false);
                $(".remove-item").on("click", function (e) {
                    var itemId = $(this).val();
                    console.log(itemId);
                    itemsArray = itemsArray.filter(function (i) {
                        console.log(i[0]);
                        return i[0].value != itemId;
                    })
                    console.log(itemsArray);
                    makeRowChanges();
                });
            }
        }

        $("#invoice-form").on("submit", function (e) {
            e.preventDefault();
            var invoiceItems = [];
            itemsArray.forEach(i => {
                var invoiceItem = {};
                i.forEach(p => {
                    invoiceItem[p.name] = p.value;
                });
                invoiceItems.push(invoiceItem);
            });

            var invoice = {};
            $("#invoice-form").serializeArray().forEach(p => {
                invoice[p.name] = p.value;
            });
            invoice.invoiceItems = invoiceItems;

            $.ajax({
                url: '@Url.Action("CreatePart2")',
                type: "POST",
                data: invoice,
                success: function (data) {
                    alert('OK');
                }
            });
        });

    </script>
}